apiVersion: apps/v1
kind: Deployment
metadata:
  name: tz-demo-app-${GIT_BRANCH}
spec:
  selector:
    matchLabels:
      app: tz-demo-app-${GIT_BRANCH}
  replicas: 1
  template:
    metadata:
      labels:
        org: tz
        team: devops
        project: admin
        environment: ${STAGING}
        app: tz-demo-app-${GIT_BRANCH}
    spec:
      imagePullSecrets:
        - name: registry-creds
      containers:
      - name: tz-demo-app-${GIT_BRANCH}
        image: ${REPOSITORY_TAG}
        imagePullPolicy: Always
#        readinessProbe:
#          httpGet:
#            path: /health
#            port: 3001
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 100Mi
        envFrom:
        - configMapRef:
            name: tz-demo-app-configmap
        - secretRef:
            name: tz-demo-app-dev-es

---
apiVersion: v1
kind: Service
metadata:
  name: tz-demo-app-${GIT_BRANCH}
spec:
  type: NodePort
  selector:
    app: tz-demo-app-${GIT_BRANCH}
  ports:
    - port: 80
      name: api-80
      targetPort: 3000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tz-demo-app-configmap
data:
  GIT_BRANCH: ${GIT_BRANCH}
  DB_HOSTNAME: host.docker.internal
  DB_R_HOSTNAME: host.docker.internal

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tz-demo-app-${GIT_BRANCH}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  rules:
  - host: ${GIT_BRANCH}-demo-app.devops-dev.${CLUSTER_NAME}.${DOMAIN}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tz-demo-app-${GIT_BRANCH}
            port:
              number: 80
  tls:
    - hosts:
        - ${GIT_BRANCH}-demo-app.devops-dev.${CLUSTER_NAME}.${DOMAIN}
      secretName: tz-demo-app-${GIT_BRANCH}

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tz-demo-app-dev-es
spec:
  refreshInterval: "15s"
  secretStoreRef:
    name: devops-dev
    kind: SecretStore
  target:
    name: tz-demo-app-dev-es
  dataFrom:
    - extract:
        key: secret/devops-dev/tz-demo-app

